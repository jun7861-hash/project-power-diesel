# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

parameters:
  - name: AzureResourceName
    default: "namespace-backend"
    displayName: "Pipeline Name"
    type: string
  - name: Company
    default: "namespace"
    displayName: "Company Name"
    type: string
    values:
      - namespace
  - name: AWSRegion
    default: "ap-southeast-1"
    displayName: "AWS Region"
    type: string
  - name: awsRegionShortName
    default: "sea1"
    displayName: "AWS Region Short Name"
    type: string
  - name: AppName
    default: "namespace-backend"
    displayName: "App Name"
    type: string

stages:
  - stage: dev
    displayName: "Dev"
    jobs:
      - deployment: STAGE_GATE
        displayName: "STAGE_GATE"
        environment: 'namespace-backend-dev'
        
      - job: APP_BUILD
        displayName: "Build Dev"
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '12.x'

        - script: npm install
          displayName: 'npm install and build lambda'
          
        - task: CopyFiles@2
          displayName: 'copy lambda codes'
          inputs:
            Contents: |
              |
              **/*
              !.git/**
              !terraform/**
            TargetFolder: '$(Build.ArtifactStagingDirectory)/${{ parameters.AppName }}-app-lambda'
            
        
        - task: ArchiveFiles@2
          displayName: 'archieve lambda codes'
          inputs:
            rootFolderOrFile: '$(Build.BinariesDirectory)/${{ parameters.AppName }}-app-lambda'
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)/namespace-backend.zip'
            replaceExistingArchive: true
            
        
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/'
            ArtifactName: '/namespace-backend.zip'
            publishLocation: 'Container'

